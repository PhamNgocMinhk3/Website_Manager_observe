#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLThaoGiang.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NCKH")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBienBan(BienBan instance);
    partial void UpdateBienBan(BienBan instance);
    partial void DeleteBienBan(BienBan instance);
    partial void InsertTieuChi(TieuChi instance);
    partial void UpdateTieuChi(TieuChi instance);
    partial void DeleteTieuChi(TieuChi instance);
    partial void InsertChucVu(ChucVu instance);
    partial void UpdateChucVu(ChucVu instance);
    partial void DeleteChucVu(ChucVu instance);
    partial void InsertChuongTrinh(ChuongTrinh instance);
    partial void UpdateChuongTrinh(ChuongTrinh instance);
    partial void DeleteChuongTrinh(ChuongTrinh instance);
    partial void InsertCT_ThongBao(CT_ThongBao instance);
    partial void UpdateCT_ThongBao(CT_ThongBao instance);
    partial void DeleteCT_ThongBao(CT_ThongBao instance);
    partial void InsertCTDanhGia(CTDanhGia instance);
    partial void UpdateCTDanhGia(CTDanhGia instance);
    partial void DeleteCTDanhGia(CTDanhGia instance);
    partial void InsertCTNhanXet(CTNhanXet instance);
    partial void UpdateCTNhanXet(CTNhanXet instance);
    partial void DeleteCTNhanXet(CTNhanXet instance);
    partial void InsertDangKyThaoGiang(DangKyThaoGiang instance);
    partial void UpdateDangKyThaoGiang(DangKyThaoGiang instance);
    partial void DeleteDangKyThaoGiang(DangKyThaoGiang instance);
    partial void InsertDuGio(DuGio instance);
    partial void UpdateDuGio(DuGio instance);
    partial void DeleteDuGio(DuGio instance);
    partial void InsertGiangVien(GiangVien instance);
    partial void UpdateGiangVien(GiangVien instance);
    partial void DeleteGiangVien(GiangVien instance);
    partial void InsertHocKy(HocKy instance);
    partial void UpdateHocKy(HocKy instance);
    partial void DeleteHocKy(HocKy instance);
    partial void InsertNamHoc(NamHoc instance);
    partial void UpdateNamHoc(NamHoc instance);
    partial void DeleteNamHoc(NamHoc instance);
    partial void InsertNhanXet(NhanXet instance);
    partial void UpdateNhanXet(NhanXet instance);
    partial void DeleteNhanXet(NhanXet instance);
    partial void InsertPhieuCham(PhieuCham instance);
    partial void UpdatePhieuCham(PhieuCham instance);
    partial void DeletePhieuCham(PhieuCham instance);
    partial void InsertThongBao(ThongBao instance);
    partial void UpdateThongBao(ThongBao instance);
    partial void DeleteThongBao(ThongBao instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NCKHConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BienBan> BienBans
		{
			get
			{
				return this.GetTable<BienBan>();
			}
		}
		
		public System.Data.Linq.Table<TieuChi> TieuChis
		{
			get
			{
				return this.GetTable<TieuChi>();
			}
		}
		
		public System.Data.Linq.Table<ChucVu> ChucVus
		{
			get
			{
				return this.GetTable<ChucVu>();
			}
		}
		
		public System.Data.Linq.Table<ChuongTrinh> ChuongTrinhs
		{
			get
			{
				return this.GetTable<ChuongTrinh>();
			}
		}
		
		public System.Data.Linq.Table<CT_ThongBao> CT_ThongBaos
		{
			get
			{
				return this.GetTable<CT_ThongBao>();
			}
		}
		
		public System.Data.Linq.Table<CTDanhGia> CTDanhGias
		{
			get
			{
				return this.GetTable<CTDanhGia>();
			}
		}
		
		public System.Data.Linq.Table<CTNhanXet> CTNhanXets
		{
			get
			{
				return this.GetTable<CTNhanXet>();
			}
		}
		
		public System.Data.Linq.Table<DangKyThaoGiang> DangKyThaoGiangs
		{
			get
			{
				return this.GetTable<DangKyThaoGiang>();
			}
		}
		
		public System.Data.Linq.Table<DuGio> DuGios
		{
			get
			{
				return this.GetTable<DuGio>();
			}
		}
		
		public System.Data.Linq.Table<GiangVien> GiangViens
		{
			get
			{
				return this.GetTable<GiangVien>();
			}
		}
		
		public System.Data.Linq.Table<HocKy> HocKies
		{
			get
			{
				return this.GetTable<HocKy>();
			}
		}
		
		public System.Data.Linq.Table<NamHoc> NamHocs
		{
			get
			{
				return this.GetTable<NamHoc>();
			}
		}
		
		public System.Data.Linq.Table<NhanXet> NhanXets
		{
			get
			{
				return this.GetTable<NhanXet>();
			}
		}
		
		public System.Data.Linq.Table<PhieuCham> PhieuChams
		{
			get
			{
				return this.GetTable<PhieuCham>();
			}
		}
		
		public System.Data.Linq.Table<ThongBao> ThongBaos
		{
			get
			{
				return this.GetTable<ThongBao>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BienBan")]
	public partial class BienBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBienBan;
		
		private System.Nullable<int> _MaGV;
		
		private System.Nullable<int> _MaDuGio;
		
		private System.Nullable<int> _TongDiem;
		
		private System.Nullable<int> _SiSo;
		
		private EntityRef<DuGio> _DuGio;
		
		private EntityRef<GiangVien> _GiangVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBienBanChanging(int value);
    partial void OnMaBienBanChanged();
    partial void OnMaGVChanging(System.Nullable<int> value);
    partial void OnMaGVChanged();
    partial void OnMaDuGioChanging(System.Nullable<int> value);
    partial void OnMaDuGioChanged();
    partial void OnTongDiemChanging(System.Nullable<int> value);
    partial void OnTongDiemChanged();
    partial void OnSiSoChanging(System.Nullable<int> value);
    partial void OnSiSoChanged();
    #endregion
		
		public BienBan()
		{
			this._DuGio = default(EntityRef<DuGio>);
			this._GiangVien = default(EntityRef<GiangVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBienBan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaBienBan
		{
			get
			{
				return this._MaBienBan;
			}
			set
			{
				if ((this._MaBienBan != value))
				{
					this.OnMaBienBanChanging(value);
					this.SendPropertyChanging();
					this._MaBienBan = value;
					this.SendPropertyChanged("MaBienBan");
					this.OnMaBienBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int")]
		public System.Nullable<int> MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDuGio", DbType="Int")]
		public System.Nullable<int> MaDuGio
		{
			get
			{
				return this._MaDuGio;
			}
			set
			{
				if ((this._MaDuGio != value))
				{
					if (this._DuGio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDuGioChanging(value);
					this.SendPropertyChanging();
					this._MaDuGio = value;
					this.SendPropertyChanged("MaDuGio");
					this.OnMaDuGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongDiem", DbType="Int")]
		public System.Nullable<int> TongDiem
		{
			get
			{
				return this._TongDiem;
			}
			set
			{
				if ((this._TongDiem != value))
				{
					this.OnTongDiemChanging(value);
					this.SendPropertyChanging();
					this._TongDiem = value;
					this.SendPropertyChanged("TongDiem");
					this.OnTongDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiSo", DbType="Int")]
		public System.Nullable<int> SiSo
		{
			get
			{
				return this._SiSo;
			}
			set
			{
				if ((this._SiSo != value))
				{
					this.OnSiSoChanging(value);
					this.SendPropertyChanging();
					this._SiSo = value;
					this.SendPropertyChanged("SiSo");
					this.OnSiSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DuGio_BienBan", Storage="_DuGio", ThisKey="MaDuGio", OtherKey="MaDuGio", IsForeignKey=true)]
		public DuGio DuGio
		{
			get
			{
				return this._DuGio.Entity;
			}
			set
			{
				DuGio previousValue = this._DuGio.Entity;
				if (((previousValue != value) 
							|| (this._DuGio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DuGio.Entity = null;
						previousValue.BienBans.Remove(this);
					}
					this._DuGio.Entity = value;
					if ((value != null))
					{
						value.BienBans.Add(this);
						this._MaDuGio = value.MaDuGio;
					}
					else
					{
						this._MaDuGio = default(Nullable<int>);
					}
					this.SendPropertyChanged("DuGio");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_BienBan", Storage="_GiangVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.BienBans.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.BienBans.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TieuChi")]
	public partial class TieuChi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTC;
		
		private string _TenTieuChi;
		
		private System.Nullable<int> _ToiDa;
		
		private EntitySet<CTDanhGia> _CTDanhGias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTCChanging(int value);
    partial void OnMaTCChanged();
    partial void OnTenTieuChiChanging(string value);
    partial void OnTenTieuChiChanged();
    partial void OnToiDaChanging(System.Nullable<int> value);
    partial void OnToiDaChanged();
    #endregion
		
		public TieuChi()
		{
			this._CTDanhGias = new EntitySet<CTDanhGia>(new Action<CTDanhGia>(this.attach_CTDanhGias), new Action<CTDanhGia>(this.detach_CTDanhGias));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTieuChi", DbType="NVarChar(300)")]
		public string TenTieuChi
		{
			get
			{
				return this._TenTieuChi;
			}
			set
			{
				if ((this._TenTieuChi != value))
				{
					this.OnTenTieuChiChanging(value);
					this.SendPropertyChanging();
					this._TenTieuChi = value;
					this.SendPropertyChanged("TenTieuChi");
					this.OnTenTieuChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToiDa", DbType="Int")]
		public System.Nullable<int> ToiDa
		{
			get
			{
				return this._ToiDa;
			}
			set
			{
				if ((this._ToiDa != value))
				{
					this.OnToiDaChanging(value);
					this.SendPropertyChanging();
					this._ToiDa = value;
					this.SendPropertyChanged("ToiDa");
					this.OnToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChi_CTDanhGia", Storage="_CTDanhGias", ThisKey="MaTC", OtherKey="MaTC")]
		public EntitySet<CTDanhGia> CTDanhGias
		{
			get
			{
				return this._CTDanhGias;
			}
			set
			{
				this._CTDanhGias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDanhGias(CTDanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TieuChi = this;
		}
		
		private void detach_CTDanhGias(CTDanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TieuChi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChucVu")]
	public partial class ChucVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCV;
		
		private string _TenChucVu;
		
		private EntitySet<GiangVien> _GiangViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    partial void OnTenChucVuChanging(string value);
    partial void OnTenChucVuChanged();
    #endregion
		
		public ChucVu()
		{
			this._GiangViens = new EntitySet<GiangVien>(new Action<GiangVien>(this.attach_GiangViens), new Action<GiangVien>(this.detach_GiangViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChucVu", DbType="NVarChar(100)")]
		public string TenChucVu
		{
			get
			{
				return this._TenChucVu;
			}
			set
			{
				if ((this._TenChucVu != value))
				{
					this.OnTenChucVuChanging(value);
					this.SendPropertyChanging();
					this._TenChucVu = value;
					this.SendPropertyChanged("TenChucVu");
					this.OnTenChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_GiangVien", Storage="_GiangViens", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<GiangVien> GiangViens
		{
			get
			{
				return this._GiangViens;
			}
			set
			{
				this._GiangViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = this;
		}
		
		private void detach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.ChucVu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChuongTrinh")]
	public partial class ChuongTrinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCT;
		
		private string _TenCT;
		
		private EntitySet<GiangVien> _GiangViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCTChanging(int value);
    partial void OnMaCTChanged();
    partial void OnTenCTChanging(string value);
    partial void OnTenCTChanged();
    #endregion
		
		public ChuongTrinh()
		{
			this._GiangViens = new EntitySet<GiangVien>(new Action<GiangVien>(this.attach_GiangViens), new Action<GiangVien>(this.detach_GiangViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCT", DbType="NVarChar(100)")]
		public string TenCT
		{
			get
			{
				return this._TenCT;
			}
			set
			{
				if ((this._TenCT != value))
				{
					this.OnTenCTChanging(value);
					this.SendPropertyChanging();
					this._TenCT = value;
					this.SendPropertyChanged("TenCT");
					this.OnTenCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinh_GiangVien", Storage="_GiangViens", ThisKey="MaCT", OtherKey="MaCT")]
		public EntitySet<GiangVien> GiangViens
		{
			get
			{
				return this._GiangViens;
			}
			set
			{
				this._GiangViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinh = this;
		}
		
		private void detach_GiangViens(GiangVien entity)
		{
			this.SendPropertyChanging();
			entity.ChuongTrinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_ThongBao")]
	public partial class CT_ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTB;
		
		private int _NguoiNhan;
		
		private System.Nullable<bool> _TrangThaiDoc;
		
		private EntityRef<ThongBao> _ThongBao;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTBChanging(int value);
    partial void OnMaTBChanged();
    partial void OnNguoiNhanChanging(int value);
    partial void OnNguoiNhanChanged();
    partial void OnTrangThaiDocChanging(System.Nullable<bool> value);
    partial void OnTrangThaiDocChanged();
    #endregion
		
		public CT_ThongBao()
		{
			this._ThongBao = default(EntityRef<ThongBao>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					if (this._ThongBao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguoiNhan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NguoiNhan
		{
			get
			{
				return this._NguoiNhan;
			}
			set
			{
				if ((this._NguoiNhan != value))
				{
					this.OnNguoiNhanChanging(value);
					this.SendPropertyChanging();
					this._NguoiNhan = value;
					this.SendPropertyChanged("NguoiNhan");
					this.OnNguoiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDoc", DbType="Bit")]
		public System.Nullable<bool> TrangThaiDoc
		{
			get
			{
				return this._TrangThaiDoc;
			}
			set
			{
				if ((this._TrangThaiDoc != value))
				{
					this.OnTrangThaiDocChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDoc = value;
					this.SendPropertyChanged("TrangThaiDoc");
					this.OnTrangThaiDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongBao_CT_ThongBao", Storage="_ThongBao", ThisKey="MaTB", OtherKey="MaTB", IsForeignKey=true)]
		public ThongBao ThongBao
		{
			get
			{
				return this._ThongBao.Entity;
			}
			set
			{
				ThongBao previousValue = this._ThongBao.Entity;
				if (((previousValue != value) 
							|| (this._ThongBao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThongBao.Entity = null;
						previousValue.CT_ThongBaos.Remove(this);
					}
					this._ThongBao.Entity = value;
					if ((value != null))
					{
						value.CT_ThongBaos.Add(this);
						this._MaTB = value.MaTB;
					}
					else
					{
						this._MaTB = default(int);
					}
					this.SendPropertyChanged("ThongBao");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDanhGia")]
	public partial class CTDanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuCham;
		
		private int _MaTC;
		
		private System.Nullable<double> _Diem;
		
		private EntityRef<TieuChi> _TieuChi;
		
		private EntityRef<PhieuCham> _PhieuCham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChamChanging(int value);
    partial void OnMaPhieuChamChanged();
    partial void OnMaTCChanging(int value);
    partial void OnMaTCChanged();
    partial void OnDiemChanging(System.Nullable<double> value);
    partial void OnDiemChanged();
    #endregion
		
		public CTDanhGia()
		{
			this._TieuChi = default(EntityRef<TieuChi>);
			this._PhieuCham = default(EntityRef<PhieuCham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuCham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuCham
		{
			get
			{
				return this._MaPhieuCham;
			}
			set
			{
				if ((this._MaPhieuCham != value))
				{
					if (this._PhieuCham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuChamChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuCham = value;
					this.SendPropertyChanged("MaPhieuCham");
					this.OnMaPhieuChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTC
		{
			get
			{
				return this._MaTC;
			}
			set
			{
				if ((this._MaTC != value))
				{
					if (this._TieuChi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTCChanging(value);
					this.SendPropertyChanging();
					this._MaTC = value;
					this.SendPropertyChanged("MaTC");
					this.OnMaTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diem", DbType="Float")]
		public System.Nullable<double> Diem
		{
			get
			{
				return this._Diem;
			}
			set
			{
				if ((this._Diem != value))
				{
					this.OnDiemChanging(value);
					this.SendPropertyChanging();
					this._Diem = value;
					this.SendPropertyChanged("Diem");
					this.OnDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChi_CTDanhGia", Storage="_TieuChi", ThisKey="MaTC", OtherKey="MaTC", IsForeignKey=true)]
		public TieuChi TieuChi
		{
			get
			{
				return this._TieuChi.Entity;
			}
			set
			{
				TieuChi previousValue = this._TieuChi.Entity;
				if (((previousValue != value) 
							|| (this._TieuChi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TieuChi.Entity = null;
						previousValue.CTDanhGias.Remove(this);
					}
					this._TieuChi.Entity = value;
					if ((value != null))
					{
						value.CTDanhGias.Add(this);
						this._MaTC = value.MaTC;
					}
					else
					{
						this._MaTC = default(int);
					}
					this.SendPropertyChanged("TieuChi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_CTDanhGia", Storage="_PhieuCham", ThisKey="MaPhieuCham", OtherKey="MaPhieuCham", IsForeignKey=true)]
		public PhieuCham PhieuCham
		{
			get
			{
				return this._PhieuCham.Entity;
			}
			set
			{
				PhieuCham previousValue = this._PhieuCham.Entity;
				if (((previousValue != value) 
							|| (this._PhieuCham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuCham.Entity = null;
						previousValue.CTDanhGias.Remove(this);
					}
					this._PhieuCham.Entity = value;
					if ((value != null))
					{
						value.CTDanhGias.Add(this);
						this._MaPhieuCham = value.MaPhieuCham;
					}
					else
					{
						this._MaPhieuCham = default(int);
					}
					this.SendPropertyChanged("PhieuCham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTNhanXet")]
	public partial class CTNhanXet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNX;
		
		private int _MaPhieuCham;
		
		private string _NoiDung;
		
		private EntityRef<NhanXet> _NhanXet;
		
		private EntityRef<PhieuCham> _PhieuCham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXChanging(int value);
    partial void OnMaNXChanged();
    partial void OnMaPhieuChamChanging(int value);
    partial void OnMaPhieuChamChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public CTNhanXet()
		{
			this._NhanXet = default(EntityRef<NhanXet>);
			this._PhieuCham = default(EntityRef<PhieuCham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNX", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNX
		{
			get
			{
				return this._MaNX;
			}
			set
			{
				if ((this._MaNX != value))
				{
					if (this._NhanXet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNXChanging(value);
					this.SendPropertyChanging();
					this._MaNX = value;
					this.SendPropertyChanged("MaNX");
					this.OnMaNXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuCham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaPhieuCham
		{
			get
			{
				return this._MaPhieuCham;
			}
			set
			{
				if ((this._MaPhieuCham != value))
				{
					if (this._PhieuCham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhieuChamChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuCham = value;
					this.SendPropertyChanged("MaPhieuCham");
					this.OnMaPhieuChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanXet_CTNhanXet", Storage="_NhanXet", ThisKey="MaNX", OtherKey="MaNX", IsForeignKey=true)]
		public NhanXet NhanXet
		{
			get
			{
				return this._NhanXet.Entity;
			}
			set
			{
				NhanXet previousValue = this._NhanXet.Entity;
				if (((previousValue != value) 
							|| (this._NhanXet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanXet.Entity = null;
						previousValue.CTNhanXets.Remove(this);
					}
					this._NhanXet.Entity = value;
					if ((value != null))
					{
						value.CTNhanXets.Add(this);
						this._MaNX = value.MaNX;
					}
					else
					{
						this._MaNX = default(int);
					}
					this.SendPropertyChanged("NhanXet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_CTNhanXet", Storage="_PhieuCham", ThisKey="MaPhieuCham", OtherKey="MaPhieuCham", IsForeignKey=true)]
		public PhieuCham PhieuCham
		{
			get
			{
				return this._PhieuCham.Entity;
			}
			set
			{
				PhieuCham previousValue = this._PhieuCham.Entity;
				if (((previousValue != value) 
							|| (this._PhieuCham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuCham.Entity = null;
						previousValue.CTNhanXets.Remove(this);
					}
					this._PhieuCham.Entity = value;
					if ((value != null))
					{
						value.CTNhanXets.Add(this);
						this._MaPhieuCham = value.MaPhieuCham;
					}
					else
					{
						this._MaPhieuCham = default(int);
					}
					this.SendPropertyChanged("PhieuCham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangKyThaoGiang")]
	public partial class DangKyThaoGiang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDK;
		
		private System.Nullable<int> _MaGV;
		
		private string _TietBD;
		
		private System.Nullable<System.DateTime> _NgayThaoGiang;
		
		private string _MaMH;
		
		private string _TenMonHoc;
		
		private string _DiaDiem;
		
		private string _NhomHoc;
		
		private string _GhiChu;
		
		private System.Nullable<int> _MaHK;
		
		private System.Nullable<int> _MaNH;
		
		private string _TenBaiHoc;
		
		private EntitySet<DuGio> _DuGios;
		
		private EntitySet<ThongBao> _ThongBaos;
		
		private EntityRef<GiangVien> _GiangVien;
		
		private EntityRef<HocKy> _HocKy;
		
		private EntityRef<NamHoc> _NamHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDKChanging(int value);
    partial void OnMaDKChanged();
    partial void OnMaGVChanging(System.Nullable<int> value);
    partial void OnMaGVChanged();
    partial void OnTietBDChanging(string value);
    partial void OnTietBDChanged();
    partial void OnNgayThaoGiangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThaoGiangChanged();
    partial void OnMaMHChanging(string value);
    partial void OnMaMHChanged();
    partial void OnTenMonHocChanging(string value);
    partial void OnTenMonHocChanged();
    partial void OnDiaDiemChanging(string value);
    partial void OnDiaDiemChanged();
    partial void OnNhomHocChanging(string value);
    partial void OnNhomHocChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnMaHKChanging(System.Nullable<int> value);
    partial void OnMaHKChanged();
    partial void OnMaNHChanging(System.Nullable<int> value);
    partial void OnMaNHChanged();
    partial void OnTenBaiHocChanging(string value);
    partial void OnTenBaiHocChanged();
    #endregion
		
		public DangKyThaoGiang()
		{
			this._DuGios = new EntitySet<DuGio>(new Action<DuGio>(this.attach_DuGios), new Action<DuGio>(this.detach_DuGios));
			this._ThongBaos = new EntitySet<ThongBao>(new Action<ThongBao>(this.attach_ThongBaos), new Action<ThongBao>(this.detach_ThongBaos));
			this._GiangVien = default(EntityRef<GiangVien>);
			this._HocKy = default(EntityRef<HocKy>);
			this._NamHoc = default(EntityRef<NamHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDK
		{
			get
			{
				return this._MaDK;
			}
			set
			{
				if ((this._MaDK != value))
				{
					this.OnMaDKChanging(value);
					this.SendPropertyChanging();
					this._MaDK = value;
					this.SendPropertyChanged("MaDK");
					this.OnMaDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int")]
		public System.Nullable<int> MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TietBD", DbType="NVarChar(10)")]
		public string TietBD
		{
			get
			{
				return this._TietBD;
			}
			set
			{
				if ((this._TietBD != value))
				{
					this.OnTietBDChanging(value);
					this.SendPropertyChanging();
					this._TietBD = value;
					this.SendPropertyChanged("TietBD");
					this.OnTietBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThaoGiang", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThaoGiang
		{
			get
			{
				return this._NgayThaoGiang;
			}
			set
			{
				if ((this._NgayThaoGiang != value))
				{
					this.OnNgayThaoGiangChanging(value);
					this.SendPropertyChanging();
					this._NgayThaoGiang = value;
					this.SendPropertyChanged("NgayThaoGiang");
					this.OnNgayThaoGiangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="NVarChar(10)")]
		public string MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMonHoc", DbType="NVarChar(60)")]
		public string TenMonHoc
		{
			get
			{
				return this._TenMonHoc;
			}
			set
			{
				if ((this._TenMonHoc != value))
				{
					this.OnTenMonHocChanging(value);
					this.SendPropertyChanging();
					this._TenMonHoc = value;
					this.SendPropertyChanged("TenMonHoc");
					this.OnTenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaDiem", DbType="NVarChar(20)")]
		public string DiaDiem
		{
			get
			{
				return this._DiaDiem;
			}
			set
			{
				if ((this._DiaDiem != value))
				{
					this.OnDiaDiemChanging(value);
					this.SendPropertyChanging();
					this._DiaDiem = value;
					this.SendPropertyChanged("DiaDiem");
					this.OnDiaDiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhomHoc", DbType="NVarChar(20)")]
		public string NhomHoc
		{
			get
			{
				return this._NhomHoc;
			}
			set
			{
				if ((this._NhomHoc != value))
				{
					this.OnNhomHocChanging(value);
					this.SendPropertyChanging();
					this._NhomHoc = value;
					this.SendPropertyChanged("NhomHoc");
					this.OnNhomHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(300)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="Int")]
		public System.Nullable<int> MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					if (this._HocKy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNH", DbType="Int")]
		public System.Nullable<int> MaNH
		{
			get
			{
				return this._MaNH;
			}
			set
			{
				if ((this._MaNH != value))
				{
					if (this._NamHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNHChanging(value);
					this.SendPropertyChanging();
					this._MaNH = value;
					this.SendPropertyChanged("MaNH");
					this.OnMaNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBaiHoc", DbType="NVarChar(100)")]
		public string TenBaiHoc
		{
			get
			{
				return this._TenBaiHoc;
			}
			set
			{
				if ((this._TenBaiHoc != value))
				{
					this.OnTenBaiHocChanging(value);
					this.SendPropertyChanging();
					this._TenBaiHoc = value;
					this.SendPropertyChanged("TenBaiHoc");
					this.OnTenBaiHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangKyThaoGiang_DuGio", Storage="_DuGios", ThisKey="MaDK", OtherKey="MaDK")]
		public EntitySet<DuGio> DuGios
		{
			get
			{
				return this._DuGios;
			}
			set
			{
				this._DuGios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangKyThaoGiang_ThongBao", Storage="_ThongBaos", ThisKey="MaDK", OtherKey="MaDK")]
		public EntitySet<ThongBao> ThongBaos
		{
			get
			{
				return this._ThongBaos;
			}
			set
			{
				this._ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_DangKyThaoGiang", Storage="_GiangVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.DangKyThaoGiangs.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.DangKyThaoGiangs.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(Nullable<int>);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DangKyThaoGiang", Storage="_HocKy", ThisKey="MaHK", OtherKey="MaHK", IsForeignKey=true)]
		public HocKy HocKy
		{
			get
			{
				return this._HocKy.Entity;
			}
			set
			{
				HocKy previousValue = this._HocKy.Entity;
				if (((previousValue != value) 
							|| (this._HocKy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocKy.Entity = null;
						previousValue.DangKyThaoGiangs.Remove(this);
					}
					this._HocKy.Entity = value;
					if ((value != null))
					{
						value.DangKyThaoGiangs.Add(this);
						this._MaHK = value.MaHK;
					}
					else
					{
						this._MaHK = default(Nullable<int>);
					}
					this.SendPropertyChanged("HocKy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_DangKyThaoGiang", Storage="_NamHoc", ThisKey="MaNH", OtherKey="MaNH", IsForeignKey=true)]
		public NamHoc NamHoc
		{
			get
			{
				return this._NamHoc.Entity;
			}
			set
			{
				NamHoc previousValue = this._NamHoc.Entity;
				if (((previousValue != value) 
							|| (this._NamHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NamHoc.Entity = null;
						previousValue.DangKyThaoGiangs.Remove(this);
					}
					this._NamHoc.Entity = value;
					if ((value != null))
					{
						value.DangKyThaoGiangs.Add(this);
						this._MaNH = value.MaNH;
					}
					else
					{
						this._MaNH = default(Nullable<int>);
					}
					this.SendPropertyChanged("NamHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DuGios(DuGio entity)
		{
			this.SendPropertyChanging();
			entity.DangKyThaoGiang = this;
		}
		
		private void detach_DuGios(DuGio entity)
		{
			this.SendPropertyChanging();
			entity.DangKyThaoGiang = null;
		}
		
		private void attach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.DangKyThaoGiang = this;
		}
		
		private void detach_ThongBaos(ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.DangKyThaoGiang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DuGio")]
	public partial class DuGio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDuGio;
		
		private int _MaDK;
		
		private int _GVDuGio;
		
		private System.Nullable<bool> _ThuKy;
		
		private EntitySet<BienBan> _BienBans;
		
		private EntitySet<PhieuCham> _PhieuChams;
		
		private EntityRef<DangKyThaoGiang> _DangKyThaoGiang;
		
		private EntityRef<GiangVien> _GiangVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDuGioChanging(int value);
    partial void OnMaDuGioChanged();
    partial void OnMaDKChanging(int value);
    partial void OnMaDKChanged();
    partial void OnGVDuGioChanging(int value);
    partial void OnGVDuGioChanged();
    partial void OnThuKyChanging(System.Nullable<bool> value);
    partial void OnThuKyChanged();
    #endregion
		
		public DuGio()
		{
			this._BienBans = new EntitySet<BienBan>(new Action<BienBan>(this.attach_BienBans), new Action<BienBan>(this.detach_BienBans));
			this._PhieuChams = new EntitySet<PhieuCham>(new Action<PhieuCham>(this.attach_PhieuChams), new Action<PhieuCham>(this.detach_PhieuChams));
			this._DangKyThaoGiang = default(EntityRef<DangKyThaoGiang>);
			this._GiangVien = default(EntityRef<GiangVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDuGio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDuGio
		{
			get
			{
				return this._MaDuGio;
			}
			set
			{
				if ((this._MaDuGio != value))
				{
					this.OnMaDuGioChanging(value);
					this.SendPropertyChanging();
					this._MaDuGio = value;
					this.SendPropertyChanged("MaDuGio");
					this.OnMaDuGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDK", DbType="Int NOT NULL")]
		public int MaDK
		{
			get
			{
				return this._MaDK;
			}
			set
			{
				if ((this._MaDK != value))
				{
					if (this._DangKyThaoGiang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDKChanging(value);
					this.SendPropertyChanging();
					this._MaDK = value;
					this.SendPropertyChanged("MaDK");
					this.OnMaDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GVDuGio", DbType="Int NOT NULL")]
		public int GVDuGio
		{
			get
			{
				return this._GVDuGio;
			}
			set
			{
				if ((this._GVDuGio != value))
				{
					if (this._GiangVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGVDuGioChanging(value);
					this.SendPropertyChanging();
					this._GVDuGio = value;
					this.SendPropertyChanged("GVDuGio");
					this.OnGVDuGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuKy", DbType="Bit")]
		public System.Nullable<bool> ThuKy
		{
			get
			{
				return this._ThuKy;
			}
			set
			{
				if ((this._ThuKy != value))
				{
					this.OnThuKyChanging(value);
					this.SendPropertyChanging();
					this._ThuKy = value;
					this.SendPropertyChanged("ThuKy");
					this.OnThuKyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DuGio_BienBan", Storage="_BienBans", ThisKey="MaDuGio", OtherKey="MaDuGio")]
		public EntitySet<BienBan> BienBans
		{
			get
			{
				return this._BienBans;
			}
			set
			{
				this._BienBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DuGio_PhieuCham", Storage="_PhieuChams", ThisKey="MaDuGio", OtherKey="MaDuGio")]
		public EntitySet<PhieuCham> PhieuChams
		{
			get
			{
				return this._PhieuChams;
			}
			set
			{
				this._PhieuChams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangKyThaoGiang_DuGio", Storage="_DangKyThaoGiang", ThisKey="MaDK", OtherKey="MaDK", IsForeignKey=true)]
		public DangKyThaoGiang DangKyThaoGiang
		{
			get
			{
				return this._DangKyThaoGiang.Entity;
			}
			set
			{
				DangKyThaoGiang previousValue = this._DangKyThaoGiang.Entity;
				if (((previousValue != value) 
							|| (this._DangKyThaoGiang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DangKyThaoGiang.Entity = null;
						previousValue.DuGios.Remove(this);
					}
					this._DangKyThaoGiang.Entity = value;
					if ((value != null))
					{
						value.DuGios.Add(this);
						this._MaDK = value.MaDK;
					}
					else
					{
						this._MaDK = default(int);
					}
					this.SendPropertyChanged("DangKyThaoGiang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_DuGio", Storage="_GiangVien", ThisKey="GVDuGio", OtherKey="MaGV", IsForeignKey=true)]
		public GiangVien GiangVien
		{
			get
			{
				return this._GiangVien.Entity;
			}
			set
			{
				GiangVien previousValue = this._GiangVien.Entity;
				if (((previousValue != value) 
							|| (this._GiangVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiangVien.Entity = null;
						previousValue.DuGios.Remove(this);
					}
					this._GiangVien.Entity = value;
					if ((value != null))
					{
						value.DuGios.Add(this);
						this._GVDuGio = value.MaGV;
					}
					else
					{
						this._GVDuGio = default(int);
					}
					this.SendPropertyChanged("GiangVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BienBans(BienBan entity)
		{
			this.SendPropertyChanging();
			entity.DuGio = this;
		}
		
		private void detach_BienBans(BienBan entity)
		{
			this.SendPropertyChanging();
			entity.DuGio = null;
		}
		
		private void attach_PhieuChams(PhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.DuGio = this;
		}
		
		private void detach_PhieuChams(PhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.DuGio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangVien")]
	public partial class GiangVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaGV;
		
		private string _HoTenGV;
		
		private string _GioTinh;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private System.Nullable<int> _MaCV;
		
		private string _MatKhau;
		
		private System.Nullable<int> _MaCT;
		
		private string _GoogleID;
		
		private EntitySet<BienBan> _BienBans;
		
		private EntitySet<DangKyThaoGiang> _DangKyThaoGiangs;
		
		private EntitySet<DuGio> _DuGios;
		
		private EntityRef<ChucVu> _ChucVu;
		
		private EntityRef<ChuongTrinh> _ChuongTrinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(int value);
    partial void OnMaGVChanged();
    partial void OnHoTenGVChanging(string value);
    partial void OnHoTenGVChanged();
    partial void OnGioTinhChanging(string value);
    partial void OnGioTinhChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnMaCVChanging(System.Nullable<int> value);
    partial void OnMaCVChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaCTChanging(System.Nullable<int> value);
    partial void OnMaCTChanged();
    partial void OnGoogleIDChanging(string value);
    partial void OnGoogleIDChanged();
    #endregion
		
		public GiangVien()
		{
			this._BienBans = new EntitySet<BienBan>(new Action<BienBan>(this.attach_BienBans), new Action<BienBan>(this.detach_BienBans));
			this._DangKyThaoGiangs = new EntitySet<DangKyThaoGiang>(new Action<DangKyThaoGiang>(this.attach_DangKyThaoGiangs), new Action<DangKyThaoGiang>(this.detach_DangKyThaoGiangs));
			this._DuGios = new EntitySet<DuGio>(new Action<DuGio>(this.attach_DuGios), new Action<DuGio>(this.detach_DuGios));
			this._ChucVu = default(EntityRef<ChucVu>);
			this._ChuongTrinh = default(EntityRef<ChuongTrinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenGV", DbType="NVarChar(50)")]
		public string HoTenGV
		{
			get
			{
				return this._HoTenGV;
			}
			set
			{
				if ((this._HoTenGV != value))
				{
					this.OnHoTenGVChanging(value);
					this.SendPropertyChanging();
					this._HoTenGV = value;
					this.SendPropertyChanged("HoTenGV");
					this.OnHoTenGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioTinh", DbType="NVarChar(50)")]
		public string GioTinh
		{
			get
			{
				return this._GioTinh;
			}
			set
			{
				if ((this._GioTinh != value))
				{
					this.OnGioTinhChanging(value);
					this.SendPropertyChanging();
					this._GioTinh = value;
					this.SendPropertyChanged("GioTinh");
					this.OnGioTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(10)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Int")]
		public System.Nullable<int> MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._ChucVu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(20)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCT", DbType="Int")]
		public System.Nullable<int> MaCT
		{
			get
			{
				return this._MaCT;
			}
			set
			{
				if ((this._MaCT != value))
				{
					if (this._ChuongTrinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCTChanging(value);
					this.SendPropertyChanging();
					this._MaCT = value;
					this.SendPropertyChanged("MaCT");
					this.OnMaCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoogleID", DbType="VarChar(50)")]
		public string GoogleID
		{
			get
			{
				return this._GoogleID;
			}
			set
			{
				if ((this._GoogleID != value))
				{
					this.OnGoogleIDChanging(value);
					this.SendPropertyChanging();
					this._GoogleID = value;
					this.SendPropertyChanged("GoogleID");
					this.OnGoogleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_BienBan", Storage="_BienBans", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<BienBan> BienBans
		{
			get
			{
				return this._BienBans;
			}
			set
			{
				this._BienBans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_DangKyThaoGiang", Storage="_DangKyThaoGiangs", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<DangKyThaoGiang> DangKyThaoGiangs
		{
			get
			{
				return this._DangKyThaoGiangs;
			}
			set
			{
				this._DangKyThaoGiangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiangVien_DuGio", Storage="_DuGios", ThisKey="MaGV", OtherKey="GVDuGio")]
		public EntitySet<DuGio> DuGios
		{
			get
			{
				return this._DuGios;
			}
			set
			{
				this._DuGios.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChucVu_GiangVien", Storage="_ChucVu", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public ChucVu ChucVu
		{
			get
			{
				return this._ChucVu.Entity;
			}
			set
			{
				ChucVu previousValue = this._ChucVu.Entity;
				if (((previousValue != value) 
							|| (this._ChucVu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChucVu.Entity = null;
						previousValue.GiangViens.Remove(this);
					}
					this._ChucVu.Entity = value;
					if ((value != null))
					{
						value.GiangViens.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChucVu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChuongTrinh_GiangVien", Storage="_ChuongTrinh", ThisKey="MaCT", OtherKey="MaCT", IsForeignKey=true)]
		public ChuongTrinh ChuongTrinh
		{
			get
			{
				return this._ChuongTrinh.Entity;
			}
			set
			{
				ChuongTrinh previousValue = this._ChuongTrinh.Entity;
				if (((previousValue != value) 
							|| (this._ChuongTrinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChuongTrinh.Entity = null;
						previousValue.GiangViens.Remove(this);
					}
					this._ChuongTrinh.Entity = value;
					if ((value != null))
					{
						value.GiangViens.Add(this);
						this._MaCT = value.MaCT;
					}
					else
					{
						this._MaCT = default(Nullable<int>);
					}
					this.SendPropertyChanged("ChuongTrinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BienBans(BienBan entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_BienBans(BienBan entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
		
		private void attach_DangKyThaoGiangs(DangKyThaoGiang entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_DangKyThaoGiangs(DangKyThaoGiang entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
		
		private void attach_DuGios(DuGio entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = this;
		}
		
		private void detach_DuGios(DuGio entity)
		{
			this.SendPropertyChanging();
			entity.GiangVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocKy")]
	public partial class HocKy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHK;
		
		private string _TenHK;
		
		private EntitySet<DangKyThaoGiang> _DangKyThaoGiangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHKChanging(int value);
    partial void OnMaHKChanged();
    partial void OnTenHKChanging(string value);
    partial void OnTenHKChanged();
    #endregion
		
		public HocKy()
		{
			this._DangKyThaoGiangs = new EntitySet<DangKyThaoGiang>(new Action<DangKyThaoGiang>(this.attach_DangKyThaoGiangs), new Action<DangKyThaoGiang>(this.detach_DangKyThaoGiangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHK
		{
			get
			{
				return this._MaHK;
			}
			set
			{
				if ((this._MaHK != value))
				{
					this.OnMaHKChanging(value);
					this.SendPropertyChanging();
					this._MaHK = value;
					this.SendPropertyChanged("MaHK");
					this.OnMaHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHK", DbType="NVarChar(3)")]
		public string TenHK
		{
			get
			{
				return this._TenHK;
			}
			set
			{
				if ((this._TenHK != value))
				{
					this.OnTenHKChanging(value);
					this.SendPropertyChanging();
					this._TenHK = value;
					this.SendPropertyChanged("TenHK");
					this.OnTenHKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocKy_DangKyThaoGiang", Storage="_DangKyThaoGiangs", ThisKey="MaHK", OtherKey="MaHK")]
		public EntitySet<DangKyThaoGiang> DangKyThaoGiangs
		{
			get
			{
				return this._DangKyThaoGiangs;
			}
			set
			{
				this._DangKyThaoGiangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyThaoGiangs(DangKyThaoGiang entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = this;
		}
		
		private void detach_DangKyThaoGiangs(DangKyThaoGiang entity)
		{
			this.SendPropertyChanging();
			entity.HocKy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NamHoc")]
	public partial class NamHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNH;
		
		private string _TenNH;
		
		private EntitySet<DangKyThaoGiang> _DangKyThaoGiangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNHChanging(int value);
    partial void OnMaNHChanged();
    partial void OnTenNHChanging(string value);
    partial void OnTenNHChanged();
    #endregion
		
		public NamHoc()
		{
			this._DangKyThaoGiangs = new EntitySet<DangKyThaoGiang>(new Action<DangKyThaoGiang>(this.attach_DangKyThaoGiangs), new Action<DangKyThaoGiang>(this.detach_DangKyThaoGiangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNH
		{
			get
			{
				return this._MaNH;
			}
			set
			{
				if ((this._MaNH != value))
				{
					this.OnMaNHChanging(value);
					this.SendPropertyChanging();
					this._MaNH = value;
					this.SendPropertyChanged("MaNH");
					this.OnMaNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNH", DbType="NVarChar(50)")]
		public string TenNH
		{
			get
			{
				return this._TenNH;
			}
			set
			{
				if ((this._TenNH != value))
				{
					this.OnTenNHChanging(value);
					this.SendPropertyChanging();
					this._TenNH = value;
					this.SendPropertyChanged("TenNH");
					this.OnTenNHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NamHoc_DangKyThaoGiang", Storage="_DangKyThaoGiangs", ThisKey="MaNH", OtherKey="MaNH")]
		public EntitySet<DangKyThaoGiang> DangKyThaoGiangs
		{
			get
			{
				return this._DangKyThaoGiangs;
			}
			set
			{
				this._DangKyThaoGiangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DangKyThaoGiangs(DangKyThaoGiang entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = this;
		}
		
		private void detach_DangKyThaoGiangs(DangKyThaoGiang entity)
		{
			this.SendPropertyChanging();
			entity.NamHoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanXet")]
	public partial class NhanXet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNX;
		
		private string _TenNhanXet;
		
		private EntitySet<CTNhanXet> _CTNhanXets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXChanging(int value);
    partial void OnMaNXChanged();
    partial void OnTenNhanXetChanging(string value);
    partial void OnTenNhanXetChanged();
    #endregion
		
		public NhanXet()
		{
			this._CTNhanXets = new EntitySet<CTNhanXet>(new Action<CTNhanXet>(this.attach_CTNhanXets), new Action<CTNhanXet>(this.detach_CTNhanXets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNX
		{
			get
			{
				return this._MaNX;
			}
			set
			{
				if ((this._MaNX != value))
				{
					this.OnMaNXChanging(value);
					this.SendPropertyChanging();
					this._MaNX = value;
					this.SendPropertyChanged("MaNX");
					this.OnMaNXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanXet", DbType="NVarChar(50)")]
		public string TenNhanXet
		{
			get
			{
				return this._TenNhanXet;
			}
			set
			{
				if ((this._TenNhanXet != value))
				{
					this.OnTenNhanXetChanging(value);
					this.SendPropertyChanging();
					this._TenNhanXet = value;
					this.SendPropertyChanged("TenNhanXet");
					this.OnTenNhanXetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanXet_CTNhanXet", Storage="_CTNhanXets", ThisKey="MaNX", OtherKey="MaNX")]
		public EntitySet<CTNhanXet> CTNhanXets
		{
			get
			{
				return this._CTNhanXets;
			}
			set
			{
				this._CTNhanXets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTNhanXets(CTNhanXet entity)
		{
			this.SendPropertyChanging();
			entity.NhanXet = this;
		}
		
		private void detach_CTNhanXets(CTNhanXet entity)
		{
			this.SendPropertyChanging();
			entity.NhanXet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuCham")]
	public partial class PhieuCham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuCham;
		
		private System.Nullable<int> _MaDuGio;
		
		private System.Nullable<System.DateTime> _NgayDanhGia;
		
		private string _GVDanhGia;
		
		private EntitySet<CTDanhGia> _CTDanhGias;
		
		private EntitySet<CTNhanXet> _CTNhanXets;
		
		private EntityRef<DuGio> _DuGio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuChamChanging(int value);
    partial void OnMaPhieuChamChanged();
    partial void OnMaDuGioChanging(System.Nullable<int> value);
    partial void OnMaDuGioChanged();
    partial void OnNgayDanhGiaChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDanhGiaChanged();
    partial void OnGVDanhGiaChanging(string value);
    partial void OnGVDanhGiaChanged();
    #endregion
		
		public PhieuCham()
		{
			this._CTDanhGias = new EntitySet<CTDanhGia>(new Action<CTDanhGia>(this.attach_CTDanhGias), new Action<CTDanhGia>(this.detach_CTDanhGias));
			this._CTNhanXets = new EntitySet<CTNhanXet>(new Action<CTNhanXet>(this.attach_CTNhanXets), new Action<CTNhanXet>(this.detach_CTNhanXets));
			this._DuGio = default(EntityRef<DuGio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuCham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuCham
		{
			get
			{
				return this._MaPhieuCham;
			}
			set
			{
				if ((this._MaPhieuCham != value))
				{
					this.OnMaPhieuChamChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuCham = value;
					this.SendPropertyChanged("MaPhieuCham");
					this.OnMaPhieuChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDuGio", DbType="Int")]
		public System.Nullable<int> MaDuGio
		{
			get
			{
				return this._MaDuGio;
			}
			set
			{
				if ((this._MaDuGio != value))
				{
					if (this._DuGio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDuGioChanging(value);
					this.SendPropertyChanging();
					this._MaDuGio = value;
					this.SendPropertyChanged("MaDuGio");
					this.OnMaDuGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDanhGia", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDanhGia
		{
			get
			{
				return this._NgayDanhGia;
			}
			set
			{
				if ((this._NgayDanhGia != value))
				{
					this.OnNgayDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._NgayDanhGia = value;
					this.SendPropertyChanged("NgayDanhGia");
					this.OnNgayDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GVDanhGia", DbType="NVarChar(100)")]
		public string GVDanhGia
		{
			get
			{
				return this._GVDanhGia;
			}
			set
			{
				if ((this._GVDanhGia != value))
				{
					this.OnGVDanhGiaChanging(value);
					this.SendPropertyChanging();
					this._GVDanhGia = value;
					this.SendPropertyChanged("GVDanhGia");
					this.OnGVDanhGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_CTDanhGia", Storage="_CTDanhGias", ThisKey="MaPhieuCham", OtherKey="MaPhieuCham")]
		public EntitySet<CTDanhGia> CTDanhGias
		{
			get
			{
				return this._CTDanhGias;
			}
			set
			{
				this._CTDanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_CTNhanXet", Storage="_CTNhanXets", ThisKey="MaPhieuCham", OtherKey="MaPhieuCham")]
		public EntitySet<CTNhanXet> CTNhanXets
		{
			get
			{
				return this._CTNhanXets;
			}
			set
			{
				this._CTNhanXets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DuGio_PhieuCham", Storage="_DuGio", ThisKey="MaDuGio", OtherKey="MaDuGio", IsForeignKey=true)]
		public DuGio DuGio
		{
			get
			{
				return this._DuGio.Entity;
			}
			set
			{
				DuGio previousValue = this._DuGio.Entity;
				if (((previousValue != value) 
							|| (this._DuGio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DuGio.Entity = null;
						previousValue.PhieuChams.Remove(this);
					}
					this._DuGio.Entity = value;
					if ((value != null))
					{
						value.PhieuChams.Add(this);
						this._MaDuGio = value.MaDuGio;
					}
					else
					{
						this._MaDuGio = default(Nullable<int>);
					}
					this.SendPropertyChanged("DuGio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDanhGias(CTDanhGia entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = this;
		}
		
		private void detach_CTDanhGias(CTDanhGia entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = null;
		}
		
		private void attach_CTNhanXets(CTNhanXet entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = this;
		}
		
		private void detach_CTNhanXets(CTNhanXet entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongBao")]
	public partial class ThongBao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTB;
		
		private System.Nullable<int> _MaDK;
		
		private EntitySet<CT_ThongBao> _CT_ThongBaos;
		
		private EntityRef<DangKyThaoGiang> _DangKyThaoGiang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTBChanging(int value);
    partial void OnMaTBChanged();
    partial void OnMaDKChanging(System.Nullable<int> value);
    partial void OnMaDKChanged();
    #endregion
		
		public ThongBao()
		{
			this._CT_ThongBaos = new EntitySet<CT_ThongBao>(new Action<CT_ThongBao>(this.attach_CT_ThongBaos), new Action<CT_ThongBao>(this.detach_CT_ThongBaos));
			this._DangKyThaoGiang = default(EntityRef<DangKyThaoGiang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTB
		{
			get
			{
				return this._MaTB;
			}
			set
			{
				if ((this._MaTB != value))
				{
					this.OnMaTBChanging(value);
					this.SendPropertyChanging();
					this._MaTB = value;
					this.SendPropertyChanged("MaTB");
					this.OnMaTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDK", DbType="Int")]
		public System.Nullable<int> MaDK
		{
			get
			{
				return this._MaDK;
			}
			set
			{
				if ((this._MaDK != value))
				{
					if (this._DangKyThaoGiang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDKChanging(value);
					this.SendPropertyChanging();
					this._MaDK = value;
					this.SendPropertyChanged("MaDK");
					this.OnMaDKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThongBao_CT_ThongBao", Storage="_CT_ThongBaos", ThisKey="MaTB", OtherKey="MaTB")]
		public EntitySet<CT_ThongBao> CT_ThongBaos
		{
			get
			{
				return this._CT_ThongBaos;
			}
			set
			{
				this._CT_ThongBaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DangKyThaoGiang_ThongBao", Storage="_DangKyThaoGiang", ThisKey="MaDK", OtherKey="MaDK", IsForeignKey=true)]
		public DangKyThaoGiang DangKyThaoGiang
		{
			get
			{
				return this._DangKyThaoGiang.Entity;
			}
			set
			{
				DangKyThaoGiang previousValue = this._DangKyThaoGiang.Entity;
				if (((previousValue != value) 
							|| (this._DangKyThaoGiang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DangKyThaoGiang.Entity = null;
						previousValue.ThongBaos.Remove(this);
					}
					this._DangKyThaoGiang.Entity = value;
					if ((value != null))
					{
						value.ThongBaos.Add(this);
						this._MaDK = value.MaDK;
					}
					else
					{
						this._MaDK = default(Nullable<int>);
					}
					this.SendPropertyChanged("DangKyThaoGiang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_ThongBaos(CT_ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.ThongBao = this;
		}
		
		private void detach_CT_ThongBaos(CT_ThongBao entity)
		{
			this.SendPropertyChanging();
			entity.ThongBao = null;
		}
	}
}
#pragma warning restore 1591
